<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{7F37516E-A601-4A80-AF24-D0788679FA92}</ProjectGuid>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>optix_project</RootNamespace>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <PlatformToolset>v110</PlatformToolset>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>Application</ConfigurationType>
    <UseDebugLibraries>false</UseDebugLibraries>
    <PlatformToolset>v110</PlatformToolset>
    <WholeProgramOptimization>true</WholeProgramOptimization>
    <CharacterSet>MultiByte</CharacterSet>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 7.5.props" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="PropertySheets">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <WarningLevel>Level3</WarningLevel>
      <Optimization>Disabled</Optimization>
      <PreprocessorDefinitions>WIN32;_DEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\include;C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\include\optixu;C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\SDK\sutil;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\SDK\support\freeglut\win64\Release\freeglut.lib;C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\lib64\optix.1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying OptiX and CUDA DLLs to output folder..
xcopy /y "C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\bin64\optix.1.dll" "$(OutDir)"
xcopy /y "C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\bin64\optixu.1.dll" "$(OutDir)"
xcopy /y "C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\bin64\cudart*.dll" "$(OutDir)"
xcopy /y "$(CudaToolkitBinDir)\cudart*.dll" "$(OutDir)"
echo Copying all PTX files from project directory to output directory..
xcopy /y "$(ProjectDir)ptx\*.*" "$(OutDir)ptx"</Command>
    </PostBuildEvent>
    <PostBuildEvent>
      <Message>Copying OptiX and CUDA DLLs to output folder..</Message>
    </PostBuildEvent>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <AdditionalDeps>
      </AdditionalDeps>
      <Include>"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include";%(AdditionalDeps)</Include>
      <FastMath>true</FastMath>
      <AdditionalOptions>-D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --compiler-options /D_USE_MATH_DEFINES -DNVCC --disable-warnings %(AdditionalOptions)</AdditionalOptions>
      <NvccCompilation>ptx</NvccCompilation>
      <CudaRuntime>Shared</CudaRuntime>
      <CodeGeneration />
      <MaxRegCount />
    </CudaCompile>
    <PreBuildEvent>
      <Command>echo Creating directories "ptx" if they don't exist yet
if not exist "$(OutDir)ptx" mkdir "$(OutDir)ptx"
if not exist "$(ProjectDir)ptx" mkdir "$(ProjectDir)ptx"</Command>
      <Message>Creating output directories for PTX files</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <WarningLevel>Level3</WarningLevel>
      <PrecompiledHeader>
      </PrecompiledHeader>
      <Optimization>MaxSpeed</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <PreprocessorDefinitions>WIN32;NDEBUG;_CONSOLE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\include;C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\include\optixu;C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\SDK\sutil;C:\Program Files\NVIDIA GPU Computing Toolkit\CUDA\v7.5\include;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
    </ClCompile>
    <Link>
      <SubSystem>Console</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\SDK\support\freeglut\win64\Release\freeglut.lib;C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\lib64\optix.1.lib;%(AdditionalDependencies)</AdditionalDependencies>
    </Link>
    <PostBuildEvent>
      <Command>echo Copying OptiX and CUDA DLLs to output folder..
xcopy /y "C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\bin64\optix.1.dll" "$(OutDir)"
xcopy /y "C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\bin64\optixu.1.dll" "$(OutDir)"
xcopy /y "C:\ProgramData\NVIDIA Corporation\OptiX SDK 3.9.0\bin64\cudart*.dll" "$(OutDir)"
xcopy /y "$(CudaToolkitBinDir)\cudart*.dll" "$(OutDir)"
echo Copying all PTX files from project directory to output directory..
xcopy /y "$(ProjectDir)ptx\*.*" "$(OutDir)ptx"</Command>
      <Message>Copying OptiX and CUDA DLLs to output folder..</Message>
    </PostBuildEvent>
    <CudaCompile>
      <TargetMachinePlatform>64</TargetMachinePlatform>
      <Include>"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include";%(AdditionalDeps)</Include>
      <CudaRuntime>Shared</CudaRuntime>
      <NvccCompilation>ptx</NvccCompilation>
      <CodeGeneration />
      <MaxRegCount />
      <FastMath>true</FastMath>
      <AdditionalOptions>-D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --compiler-options /D_USE_MATH_DEFINES -DNVCC --disable-warnings %(AdditionalOptions)</AdditionalOptions>
    </CudaCompile>
    <PreBuildEvent>
      <Command>echo Creating directories "ptx" if they don't exist yet
if not exist "$(OutDir)ptx" mkdir "$(OutDir)ptx"
if not exist "$(ProjectDir)ptx" mkdir "$(ProjectDir)ptx"</Command>
      <Message>Creating output directories for PTX files</Message>
    </PreBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClCompile Include="camera.cc" />
    <ClCompile Include="noreflect.cc" />
    <ClCompile Include="dielectric.cc" />
    <ClCompile Include="disc.cc" />
    <ClCompile Include="geom.cc" />
    <ClCompile Include="instance.cc" />
    <ClCompile Include="lambert.cc" />
    <ClCompile Include="light.cc" />
    <ClCompile Include="main.cc" />
    <ClCompile Include="material.cc" />
    <ClCompile Include="mesh.cc" />
    <ClCompile Include="node.cc" />
    <ClCompile Include="phong.cc" />
    <ClCompile Include="scene.cc" />
    <ClCompile Include="sphere.cc" />
    <ClCompile Include="tinyexr\tinyexr.cc" />
    <ClCompile Include="xray.cc" />
  </ItemGroup>
  <ItemGroup>
    <CudaCompile Include="cuda\camera.cu">
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling camera.cu into camera.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">camera.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/camera.cu" -ptx -o "ptx/camera.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include" --disable-warnings</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling camera.cu into camera.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">camera.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/camera.cu" -ptx -o "ptx/camera.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include" --disable-warnings</Command>
      <FileType>Document</FileType>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <CudaRuntime Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Static</CudaRuntime>
    </CudaCompile>
    <CudaCompile Include="cuda\constant.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/constantbg.cu" -ptx -o "ptx/constantbg.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling constantbg.cu into constantbg.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">constantbg.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling constantbg.cu into constantbg.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">constantbg.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/constantbg.cu" -ptx -o "ptx/constantbg.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <FileType>Document</FileType>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
    </CudaCompile>
    <CudaCompile Include="cuda\dielectric.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/dielectric.cu" -ptx -o "ptx/dielectric.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling dielectric.cu into dielectric.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">dielectric.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling dielectric.cu into dielectric.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">dielectric.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/dielectric.cu" -ptx -o "ptx/dielectric.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <FileType>Document</FileType>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
    </CudaCompile>
    <CudaCompile Include="cuda\disc.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/disc.cu" -ptx -o "ptx/disc.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling disc.cu into disc.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">disc.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling disc.cu into disc.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">disc.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/disc.cu" -ptx -o "ptx/disc.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
    </CudaCompile>
    <CudaCompile Include="cuda\lambert.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/lambert.cu" -ptx -o "ptx/lambert.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling lambert.cu into lambert.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">lambert.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling lambert.cu into lambert.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">lambert.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/lambert.cu" -ptx -o "ptx/lambert.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <FileType>Document</FileType>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
    </CudaCompile>
    <CudaCompile Include="cuda\phong.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/phong.cu" -ptx -o "ptx/phong.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling phong.cu into phong.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">phong.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling phong.cu into phong.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">phong.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/phong.cu" -ptx -o "ptx/phong.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
    </CudaCompile>
    <CudaCompile Include="cuda\hit_direct.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/hit_direct.cu" -ptx -o "ptx/hit_direct.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling hit_direct.cu into hit_direct.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">hit_direct.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling hit_direct.cu into hit_direct.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">hit_direct.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/hit_direct.cu" -ptx -o "ptx/hit_direct.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
    </CudaCompile>
    <CudaCompile Include="cuda\hit_nodirect.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/hit_nodirect.cu" -ptx -o "ptx/hit_nodirect.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling hit_nodirect.cu into hit_nodirect.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">hit_nodirect.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling hit_nodirect.cu into hit_nodirect.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">hit_nodirect.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/hit_nodirect.cu" -ptx -o "ptx/hit_nodirect.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
    </CudaCompile>
    <CudaCompile Include="cuda\sphere.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/sphere.cu" -ptx -o "ptx/sphere.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling sphere.cu into sphere.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">sphere.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling sphere.cu into sphere.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">sphere.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/sphere.cu" -ptx -o "ptx/sphere.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
    </CudaCompile>
    <CudaCompile Include="cuda\mesh.cu">
      <Command Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/triangle_mesh.cu" -ptx -o "ptx/triangle_mesh.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <Message Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">Compiling triangle_mesh.cu into triangle_mesh.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">triangle_mesh.cu.ptx</Outputs>
      <Message Condition="'$(Configuration)|$(Platform)'=='Release|x64'">Compiling triangle_mesh.cu into triangle_mesh.cu.ptx...</Message>
      <Outputs Condition="'$(Configuration)|$(Platform)'=='Release|x64'">triangle_mesh.cu.ptx</Outputs>
      <Command Condition="'$(Configuration)|$(Platform)'=='Release|x64'">"C:/Program Files/NVIDIA GPU Computing Toolkit/CUDA/v7.5/bin/nvcc.exe" "cuda/triangle_mesh.cu" -ptx -o "ptx/triangle_mesh.cu.ptx" -ccbin "C:/Program Files (x86)/Microsoft Visual Studio 11.0/VC/bin" -m64 -D_USE_MATH_DEFINES -DNOMINMAX -DCUDA_64_BIT_DEVICE_CODE --use_fast_math --compiler-options /D_USE_MATH_DEFINES -DNVCC -I"C:/ProgramData/NVIDIA Corporation/OptiX SDK 3.9.0/include"</Command>
      <CompileOut Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">$(ProjectDir)ptx\%(Filename)%(Extension).ptx</CompileOut>
      <Include Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </Include>
      <CodeGeneration Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </CodeGeneration>
      <GPUDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</GPUDebugInfo>
      <MaxRegCount Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
      </MaxRegCount>
      <HostDebugInfo Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">false</HostDebugInfo>
    </CudaCompile>
  </ItemGroup>
  <ItemGroup>
    <ClInclude Include="camera.h" />
    <ClInclude Include="util.h" />
    <ClInclude Include="noreflect.h" />
    <ClInclude Include="cuda\bsdf.cuh" />
    <ClInclude Include="cuda\core.cuh" />
    <ClInclude Include="cuda\light.cuh" />
    <ClInclude Include="cuda\math.cuh" />
    <ClInclude Include="cuda\shared.cuh" />
    <ClInclude Include="dielectric.h" />
    <ClInclude Include="disc.h" />
    <ClInclude Include="geom.h" />
    <ClInclude Include="instance.h" />
    <ClInclude Include="lambert.h" />
    <ClInclude Include="light.h" />
    <ClInclude Include="material.h" />
    <ClInclude Include="mesh.h" />
    <ClInclude Include="node.h" />
    <ClInclude Include="phong.h" />
    <ClInclude Include="scene.h" />
    <ClInclude Include="sphere.h" />
    <ClInclude Include="tinyexr\tinyexr.h" />
    <ClInclude Include="xray.h" />
  </ItemGroup>
  <ItemGroup>
    <None Include="packages.config" />
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
    <Import Project="$(VCTargetsPath)\BuildCustomizations\CUDA 7.5.targets" />
    <Import Project="..\packages\boost.1.59.0.0\build\native\boost.targets" Condition="Exists('..\packages\boost.1.59.0.0\build\native\boost.targets')" />
    <Import Project="..\packages\Assimp.redist.3.0.0\build\native\Assimp.redist.targets" Condition="Exists('..\packages\Assimp.redist.3.0.0\build\native\Assimp.redist.targets')" />
    <Import Project="..\packages\Assimp.3.0.0\build\native\Assimp.targets" Condition="Exists('..\packages\Assimp.3.0.0\build\native\Assimp.targets')" />
    <Import Project="..\packages\boost_program_options.1.59.0.0\build\native\boost_program_options.targets" Condition="Exists('..\packages\boost_program_options.1.59.0.0\build\native\boost_program_options.targets')" />
    <Import Project="..\packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets" Condition="Exists('..\packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets')" />
    <Import Project="..\packages\sdl2.2.0.3\build\native\sdl2.targets" Condition="Exists('..\packages\sdl2.2.0.3\build\native\sdl2.targets')" />
  </ImportGroup>
  <Target Name="EnsureNuGetPackageBuildImports" BeforeTargets="PrepareForBuild">
    <PropertyGroup>
      <ErrorText>This project references NuGet package(s) that are missing on this computer. Enable NuGet Package Restore to download them.  For more information, see http://go.microsoft.com/fwlink/?LinkID=322105. The missing file is {0}.</ErrorText>
    </PropertyGroup>
    <Error Condition="!Exists('..\packages\boost.1.59.0.0\build\native\boost.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost.1.59.0.0\build\native\boost.targets'))" />
    <Error Condition="!Exists('..\packages\Assimp.redist.3.0.0\build\native\Assimp.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Assimp.redist.3.0.0\build\native\Assimp.redist.targets'))" />
    <Error Condition="!Exists('..\packages\Assimp.3.0.0\build\native\Assimp.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\Assimp.3.0.0\build\native\Assimp.targets'))" />
    <Error Condition="!Exists('..\packages\boost_program_options.1.59.0.0\build\native\boost_program_options.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\boost_program_options.1.59.0.0\build\native\boost_program_options.targets'))" />
    <Error Condition="!Exists('..\packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\sdl2.redist.2.0.3\build\native\sdl2.redist.targets'))" />
    <Error Condition="!Exists('..\packages\sdl2.2.0.3\build\native\sdl2.targets')" Text="$([System.String]::Format('$(ErrorText)', '..\packages\sdl2.2.0.3\build\native\sdl2.targets'))" />
  </Target>
</Project>